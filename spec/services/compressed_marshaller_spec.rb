require 'rails_helper'

RSpec.describe CompressedMarshaller do
  it 'can round-trip a hash' do
    source = { 'a' => 1, 'b' => 2 }

    expect(subject.load(subject.dump(source))).to eq(source)
  end

  context 'a legacy Deferred::Visitor object' do
    subject {
      super().load("x\xDAM\xCC\xBB\n\xC2@\x10@Q\v\x89\x82\x88\x011X\xE7\x03d\xE3\v\x1C\x9B-\xB4H/\xB6a\x93\x9D\x90\x81}\x84\xD9\r\xE4\xF3\x8D\x8DX^\x0E\xDC\xF9\xD2C\xF6\xC0\x16\x99Q\x03\xBC)P\xF4\xBC\x86\x95D\xAB\xC8\x94\xF9n\b\xC8\x12Ge{\x83\x87\xC6\xDB\x04\x92\xE7krr\x1AG\x9AA&\xDD`k\xE4\xCA\xB7\x95\xD2\x83\x89\x81\x92\x89\xFB\xCE;,\xF3T\x14\xC5\xE5|\xBB\x8A\xE2xJ\xEE\x8B\x17\xA4\xB2%\x0E\xB1r\xCA\xA2\x80\x8D4\xEA\x17[\xA9U\xC4\xEF\xA7&\x8E\x9D\x80\xFD\xDF\xBA\xE9\xC8hF'>\xB1\xAE9\xB3")
    }

    it { is_expected.to be_a(Deferred::Visitor) }
    it { is_expected.to have_attributes(email: 'user@example.com') }
  end
end
