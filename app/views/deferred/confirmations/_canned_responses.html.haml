%ul
  %li= t("deferred.book_the_visit_in_nomis_first")
  %li= t("deferred.use_this_form_to_send_a_visit_confirmati")
  %li= t("deferred.make_sure_you_select_visitors_who_can_t")

= form_for @confirmation, url: deferred_confirmation_path, html: { class: 'js-SubmitOnce' } do |f|
  = hidden_field_tag :state, params[:state]
  = hidden_field_tag 'confirmation[canned_response]', true

  - if f.object.errors.any?
    #error-summary.validation-summary.group(role="alert" tabindex="-1" aria-labelledby="error-heading")
      %h2#error-heading= t("deferred.you_need_to_fix_the_errors_on_this_page")
      %ul
        - f.object.errors.each do |obj, error|
          %li
            %a.error-link{ :href => "##{obj.to_s}" }= error

  
  %h2= t("deferred.visit_date")


  #outcome.group{ :class => ('validation-error' if f.object.errors.include?(:outcome)) }
    - booked_visit.slots.each_with_index do |slot, index|
      - if slot.date.present?
        %label.block-label{ for: "confirmation_outcome_slot_#{index}" }
          = radio_button_tag 'confirmation[outcome]', "slot_#{index}", f.object.outcome == "slot_#{index}", { :class => 'js-Conditional',  :data => { :'conditional-el' => 'vo_number_field,not_listed_confirmed,banned_confirmed', :'conditional-alt' => 'not_listed_rejected,banned_rejected', :'conditional-val' => 'slot_0,slot_1,slot_2' } }
          = succeed ':' do
            = index == 0 ? "First choice" : "Alternative #{index}"
          %strong
            = Date.parse(slot.date).strftime('%A, %d/%m/%Y from ')
            = format_time_str_24 slot.times.split('-')[0]
            = t("deferred.unknown_3")
            = format_time_str_24 slot.times.split('-')[1]

    .panel-indent{ :id => 'vo_number_field' }
      #vo_number.field{ :class => ('validation-error' if f.object.errors.include?(:vo_number)) }
        %label{ :for => 'confirmation_vo_number' }
          = t("deferred.reference_number")
          %p.form-hint= t("deferred.eg_last_8_digits_of_vo_number_or_none_fo")
          %span.validation-message= f.object.errors[:vo_number].first if f.object.errors.include?(:vo_number)
        = text_field_tag 'confirmation[vo_number]', nil, :maxlength => 8
      
      .group
        #closed_visit.field
          %label.block-label(for='confirmation_closed_visit')
            = check_box_tag 'confirmation[closed_visit]', 1, f.object.closed_visit.present?, { :'data-conditional-el' => 'details_closed_visit', :class => 'js-Conditional' }
            = t("deferred.this_is_a_closed_visit")

        #details_closed_visit
          %h3= t("deferred.what_we_ll_tell_the_visitor")
          %p
            %em.email
              %strong= t("deferred.this_is_a_closed_visit_1")
              = t("deferred.the_prisoner_will_be_behind_a_glass_scre")

    %label.block-label(for='confirmation_outcome_no_slot_available' )
      = radio_button_tag 'confirmation[outcome]', Confirmation::NO_SLOT_AVAILABLE, false, { :'data-conditional-el' => 'details_no_slot_available', :class => 'js-Conditional' }
      = t("deferred.none_of_the_chosen_times_are_available")

    #details_no_slot_available.panel-indent
      %p= t("deferred.choose_this_option_if")
      %ul.list-bullet
        %li= t("deferred.the_prisoner_has_restrictions_on_their_v")
        %li= t("deferred.the_prisoner_is_due_to_be_elsewhere_eg_a")
        %li= t("deferred.the_visit_can_t_take_place_because_anoth")
      %h3= t("deferred.what_we_ll_tell_the_visitor")
      %p
        %em.email= t("deferred.we_re_sorry_but_none_of_the_dates_and_ti", a: (booked_visit.prisoner.first_name), b: (booked_visit.prisoner.last_name), c: (booked_visit.prisoner.prison_name))

  
  %h2= t("deferred.visiting_allowance")

  .group{ :class => ('validation-error' if f.object.errors.include?(:outcome)) }
    %label.block-label(for='confirmation_outcome_no_allowance')
      = radio_button_tag 'confirmation[outcome]', Confirmation::NO_ALLOWANCE, f.object.outcome == Confirmation::NO_ALLOWANCE, { :'data-conditional-el' => 'no_allowance', :class => 'js-Conditional' }
      = t("deferred.the_prisoner_does_not_have_any_visiting_1")

    #no_allowance.panel-indent
      %h3= t("deferred.what_we_ll_tell_the_visitor")
      %p
        %em.email= t("deferred.we_re_sorry_but_the_prisoner_you_want_to")
      %p= t("deferred.you_can_also_tell_the_visitor_more_about")

      #no_vo.field{ :class => ('validation-error' if f.object.errors.include?(:no_vo)) }
        %label.block-label(for='confirmation_no_vo')
          = check_box_tag 'confirmation[no_vo]', 1, f.object.no_vo.present?, { :'data-conditional-el' => 'details_no_vo', :class => 'js-Conditional', :id => 'confirmation_no_vo' }
          = t("deferred.visiting_allowance_weekends_and_weekday")
          %span.validation-message= f.object.errors[:no_vo].first if f.object.errors.include?(:no_vo)

      #details_no_vo
        = render 'booking_calendar', :name => 'confirmation[renew_vo]'
        %h3= t("deferred.what_we_ll_tell_the_visitor")
        %p
          %em.email
            = t("deferred.a_b_will_have_their_full_visiting_allow", a: (booked_visit.prisoner.first_name), b: (booked_visit.prisoner.last_name))
            = succeed '.' do
              %span.date= t("deferred.date_not_chosen")

      #no_pvo.field{ :class => ('validation-error' if f.object.errors.include?(:no_pvo)) }
        %label.block-label(for='confirmation_no_pvo')
          = check_box_tag 'confirmation[no_pvo]', 1, f.object.no_pvo.present?, { :'data-conditional-el' => 'details_no_pvo', :class => 'js-Conditional', :id => 'confirmation_no_pvo' }
          = t("deferred.if_weekday_visit_pvo_is_possible_instead")
          %span.validation-message= f.object.errors[:no_pvo].first if f.object.errors.include?(:no_pvo)

      #details_no_pvo
        = render 'booking_calendar', :name => 'confirmation[renew_pvo]'
        %h3= t("deferred.what_we_ll_tell_the_visitor")
        %p
          %em.email
            = t("deferred.however_you_can_book_a_weekday_visit_wit")
            = succeed '.' do
              %span.date= t("deferred.date_not_chosen")
            = t("deferred.the_visit_must_be_taken_before_the_allow")

  
  %h2= t("deferred.issue_with_the_prisoner")

  .group
    .field{ :class => ('validation-error' if f.object.errors.include?(:outcome)) }
      %label.block-label(for='confirmation_outcome_prisoner_incorrect')
        = radio_button_tag 'confirmation[outcome]', Confirmation::PRISONER_INCORRECT, false, { :'data-conditional-el' => 'prisoner_incorrect', :class => 'js-Conditional' }
        = t("deferred.prisoner_details_are_incorrect")

    #prisoner_incorrect.panel-indent
      %h3= t("deferred.what_we_ll_tell_the_visitor")
      %p
        %em.email= t("deferred.your_visit_cannot_take_place_as_you_have")

    .field{ :class => ('validation-error' if f.object.errors.include?(:outcome)) }
      %label.block-label(for='confirmation_outcome_prisoner_not_present')
        = radio_button_tag 'confirmation[outcome]', Confirmation::PRISONER_NOT_PRESENT, false, { :'data-conditional-el' => 'prisoner_not_present', :class => 'js-Conditional' }
        = t("deferred.prisoner_no_longer_at_the_prison")

    #prisoner_not_present.panel-indent
      %h3= t("deferred.what_we_ll_tell_the_visitor")
      %p
        %em.email= t("deferred.your_visit_cannot_take_place_as_the_pris")

  
  %h2= t("deferred.issue_with_visitors")

  .group
    #unlisted.field{ :class => ('validation-error' if f.object.errors.include?(:visitor_not_listed) || f.object.errors.include?(:unlisted)) }
      %label.block-label(for='confirmation_visitor_not_listed')
        = check_box_tag 'confirmation[visitor_not_listed]', 1, f.object.visitor_not_listed == '1', { :'data-conditional-el' => 'visitors_not_listed', :class => 'js-Conditional' }
        = t("deferred.visitor_isn_t_on_the_contact_list")
        %span.validation-message= f.object.errors[:unlisted].first if f.object.errors.include?(:unlisted)

    #visitors_not_listed.panel-indent.CheckboxSummary(data-strip=";")
      %h3= t("deferred.what_we_ll_tell_the_visitor")
      #not_listed_rejected
        %p
          %em.email
            = t("deferred.your_visit_cannot_take_place_as_details")
            %span.CheckboxSummary-summary= t("deferred.visitor_name")
            = t("deferred.don_t_match_our_records_or_they_aren_t_o")
        %p
          %em.email= t("deferred.please_contact_the_prisoner_and_ask_them")
        %p
          %em.email= t("deferred.if_this_is_the_prisoner_s_first_visit_re")
      #not_listed_confirmed
        %p
          %em.email
            %span.CheckboxSummary-summary
            = t("deferred.cannot_attend")
        %p
          %em.email
            = t("deferred.details_for")
            %span.CheckboxSummary-summary
            = t("deferred.don_t_match_our_records_or_the_visitor_i")
        %p
          %em.email= t("deferred.please_contact_the_prisoner_and_ask_them")

      - booked_visit.visitors.each_with_index do |visitor, index|
        %label.block-label{ :for => "confirmation_unlisted_visitors_#{index}" }
          = check_box_tag "confirmation[unlisted_visitors][]", "#{visitor.first_name};#{visitor.last_name}", f.object.unlisted_visitors && f.object.unlisted_visitors.include?("#{visitor.first_name};#{visitor.last_name}"), { :id => "confirmation_unlisted_visitors_#{index}" }
          = t("deferred.a_b_c_is_not_on_the_list", a: (visitor.first_name), b: (visitor.last_name), c: (visitor.date_of_birth.strftime("%d/%m/%Y")))

    #banned.field{ :class => ('validation-error' if f.object.errors.include?(:visitor_banned) || f.object.errors.include?(:banned)) }
      %label.block-label(for='confirmation_visitor_banned')
        = check_box_tag 'confirmation[visitor_banned]', 1, f.object.visitor_banned == '1', { :'data-conditional-el' => 'visitors_banned', :class => 'js-Conditional' }
        = t("deferred.visitor_is_banned")
        %span.validation-message= f.object.errors[:banned].first if f.object.errors.include?(:banned)

    #visitors_banned.panel-indent.CheckboxSummary(data-strip=";")
      %h3= t("deferred.what_we_ll_tell_the_visitor")
      #banned_rejected
        %p
          %em.email
            = t("deferred.your_visit_cannot_take_place")
            %span.CheckboxSummary-summary= t("deferred.visitor_name")
            = t("deferred.should_have_received_a_letter_to_say_tha")

      #banned_confirmed
        %p
          %em.email
            %span.CheckboxSummary-summary
            = t("deferred.cannot_attend_1")
        %p
          %em.email
            %span.CheckboxSummary-summary
            = t("deferred.should_have_received_a_letter_to_say_tha")

      - booked_visit.visitors.each_with_index do |visitor, index|
        %label.block-label{ :for => "confirmation_banned_visitors_#{index}" }
          = check_box_tag "confirmation[banned_visitors][]", "#{visitor.first_name};#{visitor.last_name}", f.object.banned_visitors && f.object.banned_visitors.include?("#{visitor.first_name};#{visitor.last_name}"), { :id => "confirmation_banned_visitors_#{index}" }
          = t("deferred.a_b_c_is_banned", a: (visitor.first_name), b: (visitor.last_name), c: (visitor.date_of_birth.strftime("%d/%m/%Y")))

  = f.button 'Send email', :class => 'button button-primary'
